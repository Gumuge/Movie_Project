{"version":3,"sources":["Components/Config.tsx","Components/MainImage.tsx","Components/Contents.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ApiKey","ApiURL","ImageURL","MainImage","props","className","style","backgroundImage","image","title","desc","Contents","src","poster","id","App","useState","Movies","setMovies","MainMovie","setMainMovie","current","setcurrent","endpoint","getData","a","axios","get","then","response","console","log","data","results","page","error","useEffect","backdrop_path","original_title","overview","map","movie","poster_path","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","basename","process"],"mappings":"qRACaA,G,MAAgB,oCAEhBC,EAAgB,gCAEhBC,EAAkB,8B,eCmBhBC,MAdf,SAAmBC,GACf,OACI,qBAAKC,UAAU,aAAaC,MAAO,CAACC,gBAAgB,OAAD,OAAQH,EAAMI,MAAd,MAAnD,SACI,sBAAKH,UAAU,WAAf,UACI,6BAAKD,EAAMK,QACX,qBAAKJ,UAAU,OAAf,SACKD,EAAMM,a,uBCCZC,MAVf,SAAkBP,GACd,OACI,qBAAKC,UAAU,YAAf,SACI,qBACAO,IAAKR,EAAMS,UAFiBT,EAAMU,KCmG/BC,MApFf,WACE,MAA4BC,mBAAkB,IAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAiB,GAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KACIC,EAAQ,UAAMtB,EAAN,iCAAqCD,EAArC,8BAJc,SAMXwB,EANW,8EAM1B,WAAuBD,GAAvB,SAAAE,EAAA,sDACE,IAEAC,IAAMC,IAAIJ,GACTK,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACdX,EAAUW,EAASG,KAAKC,SACxBb,EAAaS,EAASG,KAAKC,QAAQ,IACnCX,EAAWO,EAASG,KAAKE,SAEvB,MAAOC,GAEPL,QAAQK,MAAMA,GAZlB,4CAN0B,sBAiD1B,OAlBAC,qBAAU,WAcRZ,EAAQD,KACP,IACHO,QAAQC,IAAId,GACZa,QAAQC,IAAIZ,GAEV,sBAAKd,UAAU,WAAf,UAEGc,GACC,cAAC,EAAD,CACAX,MAAK,UAAKN,EAAL,uBAAqBiB,QAArB,IAAqBA,OAArB,EAAqBA,EAAWkB,eACrC5B,MAAOU,EAAUmB,eACjB5B,KAAMS,EAAUoB,WAIlB,sBAAKlC,UAAU,QAAf,UACE,kDACA,0BAEF,qBAAKA,UAAU,WAAf,SACGY,EAAOuB,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CACA5B,OAAM,UAAKX,EAAL,eAAoBuC,EAAMC,aAChC5B,GAAI2B,EAAM3B,IACL2B,EAAM3B,SAIf,sBAAKT,UAAU,UAAf,UACM,wBAAQsC,QAhDlB,WAEEnB,EADAD,EAAQ,UAAMtB,EAAN,iCAAqCD,EAArC,oCAAuEqB,EAAU,IAEzFS,QAAQC,IAAR,qBAA0BV,EAAQ,KA6C1B,sBACA,qBAAKhB,UAAU,OAAf,SACGgB,IAEH,wBAAQsB,QAzDlB,WAEEnB,EADAD,EAAQ,UAAMtB,EAAN,iCAAqCD,EAArC,oCAAuEqB,EAAU,IAEzFS,QAAQC,IAAR,qBAA0BV,EAAQ,KAsD1B,yBCxFGuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OACT,cAAC,IAAD,CAAQI,SAAUC,iBAAlB,SACE,cAAE,EAAF,MACAH,SAASC,eAAe,SAI1BZ,M","file":"static/js/main.c98fc3df.chunk.js","sourcesContent":["\r\nexport const ApiKey:string = \"5e6ae076c695e86b13664b973dab9ad5\";\r\n\r\nexport const ApiURL:string = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const ImageURL:string = \"https://image.tmdb.org/t/p/\";\r\n","import { url } from 'inspector';\r\nimport React from 'react'\r\nimport \"./MainImage.css\";\r\n\r\ninterface MyProps{\r\n    image:string;\r\n    title:string;\r\n    desc:string;\r\n}\r\n\r\nfunction MainImage(props:MyProps):JSX.Element {\r\n    return (\r\n        <div className=\"background\" style={{backgroundImage:`url(${props.image})`}}>\r\n            <div className=\"MainDesc\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"desc\">\r\n                    {props.desc}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import React from 'react'\r\nimport \"./Contents.css\";\r\n\r\ninterface MyProps{\r\n    poster:string;\r\n    id:number;\r\n}\r\nfunction Contents(props: MyProps):JSX.Element {\r\n    return (\r\n        <div className=\"grid_card\" key={props.id}>\r\n            <img \r\n            src={props.poster}\r\n            ></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contents\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {ApiKey, ApiURL, ImageURL} from './Components/Config';\nimport MainImage from './Components/MainImage';\nimport axios from 'axios';\nimport Contents from \"./Components/Contents\";\n\ninterface Movie{\n  adult: false\n  backdrop_path: string;\n  genre_ids: Array<number>;\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n//function App(props : Movie): JSX.Element \nfunction App(): JSX.Element {\n  const [Movies, setMovies] = useState<Movie[]>([]);\n  const [MainMovie, setMainMovie] = useState<Movie>();\n  const [current, setcurrent] = useState<number>(0);\n  let endpoint = `${ApiURL}movie/popular?api_key=${ApiKey}&language=ko-Korean&page=1`;\n\n  async function getData(endpoint:string){ \n    try {\n    //응답 성공\n    axios.get(endpoint)\n    .then(response => {\n      console.log(response);\n    setMovies(response.data.results);\n    setMainMovie(response.data.results[0]);\n    setcurrent(response.data.page);\n    }) \n    } catch (error) {\n      //응답 실패\n      console.error(error);\n    }\n  }\n  function LoadingNext() {\n    endpoint = `${ApiURL}movie/popular?api_key=${ApiKey}&language=ko-Korean&page=${current + 1}`;\n    getData(endpoint);\n    console.log(`now page = ${current+1}`);\n  }\n  function LoadingPrev() {\n    endpoint = `${ApiURL}movie/popular?api_key=${ApiKey}&language=ko-Korean&page=${current - 1}`;\n    getData(endpoint);\n    console.log(`now page = ${current-1}`);\n  }\n  useEffect(() => {\n    // const endpoint = `${ApiURL}movie/popular?api_key=${ApiKey}&language=en-US&page=1`;\n    // fetch(endpoint)\n    // .then(response => response.json())\n    // .then(response => {\n    //   setMovies([response.results]);\n    //   setMainMovie(response.results[0]);\n    // })\n    // axios.get(endpoint)\n    // .then(response => {\n    //   setMovies(response.data.results);\n    //   setMainMovie(response.data.results[0]);\n    //   console.log(response.data.results);\n    // })\n    getData(endpoint);\n  }, [])\n  console.log(Movies);\n  console.log(MainMovie);\n  return (\n    <div className=\"MainPage\">\n\n      {MainMovie &&\n        <MainImage \n        image={`${ImageURL}w1280${MainMovie?.backdrop_path}`}\n        title={MainMovie.original_title}\n        desc={MainMovie.overview}\n        ></MainImage>\n      }\n      \n      <div className=\"title\">\n        <h1>Movies by latest</h1>\n        <hr></hr>\n      </div>\n      <div className=\"contents\">\n        {Movies.map((movie) => (\n          <Contents \n          poster={`${ImageURL}w500${movie.poster_path}`}\n          id={movie.id}\n          key={movie.id}\n          ></Contents>\n        ))}\n      </div>\n      <div className=\"control\">\n            <button onClick={LoadingPrev}>previous</button>\n            <div className=\"page\">\n              {current}\n            </div>\n            <button onClick={LoadingNext}>next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n<Router basename={process.env.PUBLIC_URL}>\n  < App /></Router>,\n  document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}